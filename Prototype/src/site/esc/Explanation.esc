# Prototype Project

This is just a stupid example of what an Escalator document might look like.  This
documentation is basically a [Markdown][1] document, with some extensions (indicated
by an initial `//` on a line) that are caught by our preprocessor to handle extracted
code fragments and embedded tests/examples.

[1]: http://daringfireball.net/projects/markdown/ "Markdown"

Here is the code for a factorial function, which computes \(n!=\prod_{i
=1}^n i\):
// source '/src/main/scala/Factorial.scala' <Factorial>

Now we can test it:
// test
"Factorial(7) is 5040" in {
  Factorial(7) must_==(5040)
}

"Factorial(n) = Factorial(n-1) * n" in {
  val smallInteger = Gen.choose(1, 100)

  Prop.forAll(smallInteger) { n: Int =>
    Factorial(n) == Factorial(n-1) * n
  } must pass
}

"Factorial(-1) is 0" in {
  Factorial(-1) must_==(0)
}
// end test

And here is an example of its use:
// example
Factorial(100)
// end example

That's about it.
